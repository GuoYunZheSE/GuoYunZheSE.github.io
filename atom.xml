<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yunzhe&#39;s Site</title>
  
  
  <link href="http://yunzhe.info/atom.xml" rel="self"/>
  
  <link href="http://yunzhe.info/"/>
  <updated>2020-11-11T12:35:31.827Z</updated>
  <id>http://yunzhe.info/</id>
  
  <author>
    <name>郭蕴喆</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>不需要密码，手动生成Django Simple JWT</title>
    <link href="http://yunzhe.info/2020/Generate%20Django%20SImple%20JWT%20Manually/"/>
    <id>http://yunzhe.info/2020/Generate%20Django%20SImple%20JWT%20Manually/</id>
    <published>2020-11-11T20:06:12.000Z</published>
    <updated>2020-11-11T12:35:31.827Z</updated>
    
    <content type="html"><![CDATA[<p>​    在后台开发的过程中，由于客户有跨系统自动登录用户的需求，在没有SSO系统的情况下，考虑使用生成指定用户的JWT的方式来达成免密码登录的效果，其中遇到了<code>Given token not valid for any token type</code>等错误。</p><a id="more"></a><p>​    在StackOverflow上我查到了以下回答：</p><blockquote><p>From: <span class="exturl" data-url="aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzI3NTMyMzQxLzEyMzc1NTE1">https://stackoverflow.com/a/27532341/12375515<i class="fa fa-external-link-alt"></i></span></p><p>When working with Django REST Framework JWT, it is typically expected that the user is generating the token on their own. Because you are generating the token on behalf of the user, you can’t use any of the standard views to make it work.</p><p>You are going to need to generate the token on your own, similar to <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0dldEJsaW1wL2RqYW5nby1yZXN0LWZyYW1ld29yay1qd3QvYmxvYi80NzdkNTg4N2FiYmJjZTdhOWQxMWRjODI3ZDk1NDk3MGQ3YzY2YmQ3L3Jlc3RfZnJhbWV3b3JrX2p3dC9zZXJpYWxpemVycy5weSNMNTUtTDY2">how DRF JWT does it<i class="fa fa-external-link-alt"></i></span> in the views. This means using something like the following for your view code</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework_jwt.settings <span class="keyword">import</span> api_settings</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">jwt_payload_handler = api_settings.JWT_PAYLOAD_HANDLER</span><br><span class="line">jwt_encode_handler = api_settings.JWT_ENCODE_HANDLER</span><br><span class="line"></span><br><span class="line">my_user = User.objects.get(pk=<span class="number">1</span>) <span class="comment"># replace with your existing logic</span></span><br><span class="line"></span><br><span class="line">payload = jwt_payload_handler(my_user)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Include original issued at time for a brand new token,</span></span><br><span class="line"><span class="comment"># to allow token refresh</span></span><br><span class="line"><span class="keyword">if</span> api_settings.JWT_ALLOW_REFRESH:</span><br><span class="line">    payload[<span class="string">&#x27;orig_iat&#x27;</span>] = timegm(</span><br><span class="line">        datetime.utcnow().utctimetuple()</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="string">&#x27;token&#x27;</span>: jwt_encode_handler(payload)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p>​    按照他的方法，我把我的代码改成了如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">autoLogin</span>(<span class="params">APIView</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        res = &#123;</span><br><span class="line">            <span class="string">&quot;code&quot;</span>: <span class="number">20000</span>,</span><br><span class="line">            <span class="string">&quot;message&quot;</span>: <span class="string">&quot;获取用户信息成功&quot;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            data = request.data</span><br><span class="line">            ST = SysTokenSerializer(models.SysToken.objects.filter(id=data[<span class="string">&#x27;SysID&#x27;</span>]), many=<span class="literal">True</span>)</span><br><span class="line">            <span class="comment"># 子系统验证</span></span><br><span class="line">            <span class="keyword">if</span> ST.data[<span class="number">0</span>][<span class="string">&#x27;SysToken&#x27;</span>] != data[<span class="string">&#x27;SysToken&#x27;</span>]:</span><br><span class="line">                <span class="keyword">raise</span> Exception(<span class="string">&quot;SysToken不合法&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># 获取用户ID</span></span><br><span class="line">                SysUserId = data[<span class="string">&#x27;SysUserId&#x27;</span>]</span><br><span class="line">                jwt_payload_handler = api_settings.JWT_PAYLOAD_HANDLER</span><br><span class="line">                jwt_encode_handler = api_settings.JWT_ENCODE_HANDLER</span><br><span class="line"></span><br><span class="line">                user = models.User.objects.get(id=SysUserId)  <span class="comment"># replace with your existing logic</span></span><br><span class="line"></span><br><span class="line">                payload = jwt_payload_handler(user)</span><br><span class="line">                <span class="keyword">if</span> api_settings.JWT_ALLOW_REFRESH:</span><br><span class="line">                    payload[<span class="string">&#x27;orig_iat&#x27;</span>] = timegm(</span><br><span class="line">                        datetime.utcnow().utctimetuple()</span><br><span class="line">                    )</span><br><span class="line">                token = jwt_encode_handler(payload)</span><br><span class="line">                res[<span class="string">&#x27;refresh&#x27;</span>] = token</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            res[<span class="string">&quot;code&quot;</span>] = <span class="number">-1</span></span><br><span class="line">            res[<span class="string">&quot;message&quot;</span>] = <span class="string">f&quot;获取用户信息失败, <span class="subst">&#123;e&#125;</span>&quot;</span></span><br><span class="line">        <span class="keyword">return</span> Response(res)</span><br></pre></td></tr></table></figure><p>​    成功生成了用户对应的Token，可是使用该Token时发现如下错误：”Token has no id”</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;detail&quot;</span>: <span class="string">&quot;Given token not valid for any token type&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;code&quot;</span>: <span class="string">&quot;token_not_valid&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;messages&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;token_class&quot;</span>: <span class="string">&quot;AccessToken&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;token_type&quot;</span>: <span class="string">&quot;access&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;message&quot;</span>: <span class="string">&quot;Token has no id&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    查阅Simple JWT源码发现，需要添加<code>jti</code>进入<code>payload</code>:<code>payload[&#39;jti&#39;] = uuid.uuid4().hex</code></p><p>​    再次生成Token进行测试，出现如下错误：”Token has no type”</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;detail&quot;</span>: <span class="string">&quot;Given token not valid for any token type&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;code&quot;</span>: <span class="string">&quot;token_not_valid&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;messages&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;token_class&quot;</span>: <span class="string">&quot;AccessToken&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;token_type&quot;</span>: <span class="string">&quot;access&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;message&quot;</span>: <span class="string">&quot;Token has no type&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    进一步添加:<code>payload[&#39;token_type&#39;]=&#39;access&#39;</code>，最终JWT验证通过，用户正常登入系统。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;​    在后台开发的过程中，由于客户有跨系统自动登录用户的需求，在没有SSO系统的情况下，考虑使用生成指定用户的JWT的方式来达成免密码登录的效果，其中遇到了&lt;code&gt;Given token not valid for any token type&lt;/code&gt;等错误。&lt;/p&gt;</summary>
    
    
    
    <category term="后台" scheme="http://yunzhe.info/categories/%E5%90%8E%E5%8F%B0/"/>
    
    
    <category term="Django" scheme="http://yunzhe.info/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Viewer IP maps for Next 8.0</title>
    <link href="http://yunzhe.info/2020/Viewer%20IP%20maps%20for%20Next%208.0/"/>
    <id>http://yunzhe.info/2020/Viewer%20IP%20maps%20for%20Next%208.0/</id>
    <published>2020-10-12T13:16:52.000Z</published>
    <updated>2020-10-12T06:45:46.403Z</updated>
    
    <content type="html"><![CDATA[<p><span class="exturl" data-url="aHR0cHM6Ly9saW5rcy5qaWFuc2h1LmNvbS9nbz90bz1odHRwczovL2NsdXN0cm1hcHMuY29t">clustrmaps.com<i class="fa fa-external-link-alt"></i></span> 是美国的一家数据网站，能够汇总公共记录来分析美国城市的社会人口和商业环境。</p><blockquote><p>Add the ClustrMaps hit tracker to your site or blog and see a real-time map of your visitors from around the world! Proudly show and grow your hidden community of interest.</p></blockquote><p>网址提供了生成访问者地址分布图的代码，可以嵌入到网站或博客中，来显示来自世界各地访问者的实时地图，有助于发展您隐藏的兴趣社区。最重要的是，这个功能是<strong>免费</strong>的，能够满足个人网站的需求。</p><p>注册登录之后，将<code>/themes/next/layout/_macro/sidebar.njk</code>修改如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&#123;% macro render(display_toc) %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;toggle sidebar-toggle&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;toggle-line&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;toggle-line&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;toggle-line&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">aside</span> <span class="attr">class</span>=<span class="string">&quot;sidebar&quot;</span>&gt;</span></span><br><span class="line">    &#123;%- set display_toc = page.toc.enable and display_toc %&#125;</span><br><span class="line">    &#123;%- if display_toc %&#125;</span><br><span class="line">      &#123;%- set toc = toc(page.content, &#123; class: &quot;nav&quot;, list_number: page.toc.number, max_depth: page.toc.max_depth &#125;) %&#125;</span><br><span class="line">      &#123;%- set display_toc = toc.length &gt; 1 and display_toc %&#125;</span><br><span class="line">    &#123;%- endif %&#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sidebar-inner &#123;% if display_toc %&#125;sidebar-nav-active sidebar-toc-active&#123;% else %&#125;sidebar-overview-active&#123;% endif %&#125;&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;sidebar-nav&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;sidebar-nav-toc&quot;</span>&gt;</span></span><br><span class="line">          &#123;&#123; __(&#x27;sidebar.toc&#x27;) &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;sidebar-nav-overview&quot;</span>&gt;</span></span><br><span class="line">          &#123;&#123; __(&#x27;sidebar.overview&#x27;) &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--noindex--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;post-toc-wrap sidebar-panel&quot;</span>&gt;</span></span><br><span class="line">        &#123;%- if display_toc %&#125;</span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;post-toc animated&quot;</span>&gt;</span>&#123;&#123; toc &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;%- endif %&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--/noindex--&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;site-overview-wrap sidebar-panel&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123; partial(&#x27;_partials/sidebar/site-overview.njk&#x27;, &#123;&#125;, &#123;cache: theme.cache.enable&#125;) &#125;&#125;</span><br><span class="line"></span><br><span class="line">        &#123;&#123;- next_inject(&#x27;sidebar&#x27;) &#125;&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      &#123;%- if theme.back2top.enable and theme.back2top.sidebar %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;back-to-top animated&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-arrow-up&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>0%<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      &#123;%- endif %&#125;</span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">id</span>=<span class="string">&quot;clstr_globe&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//clustrmaps.com/globe.js?d=插入网站给出的代码&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sidebar-dimmer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endmacro %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最终结果如图所示：</p><img src="/images/image-20201012132342318.png" alt="image-20201012132342318" style="zoom:50%;" />]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9saW5rcy5qaWFuc2h1LmNvbS9nbz90bz1odHRwczovL2NsdXN0cm1hcHMuY29t&quot;&gt;clustrmaps.com&lt;i class=&quot;fa fa-ex</summary>
      
    
    
    
    <category term="Blog" scheme="http://yunzhe.info/categories/Blog/"/>
    
    
    <category term="Next" scheme="http://yunzhe.info/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>Django自定义多用户类</title>
    <link href="http://yunzhe.info/2020/Django%E8%87%AA%E5%AE%9A%E4%B9%89%E5%A4%9A%E7%94%A8%E6%88%B7%E7%B1%BB%E6%97%A0%E6%B3%95%E4%BA%A7%E7%94%9F%E7%94%A8%E6%88%B7%E8%A1%A8/"/>
    <id>http://yunzhe.info/2020/Django%E8%87%AA%E5%AE%9A%E4%B9%89%E5%A4%9A%E7%94%A8%E6%88%B7%E7%B1%BB%E6%97%A0%E6%B3%95%E4%BA%A7%E7%94%9F%E7%94%A8%E6%88%B7%E8%A1%A8/</id>
    <published>2020-10-10T22:06:52.000Z</published>
    <updated>2020-11-11T12:05:38.214Z</updated>
    
    <content type="html"><![CDATA[<p>最近接了一个项目，打算用<code>Django+Vue</code>的方式去搭建一个网站.</p><p>由于网站的使用用户分为两类，因此决定使用<code>OneToOneField</code>的方法去自定义用户类.</p><p>具体代码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># File: /core/modles.py</span></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> AbstractUser</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span>(<span class="params">AbstractUser</span>):</span></span><br><span class="line">    user_type = models.IntegerField()</span><br><span class="line">    user_mobile = models.CharField(max_length=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LegalPersonTable</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    User = models.OneToOneField(<span class="string">&#x27;core.User&#x27;</span>, on_delete=models.CASCADE, primary_key=<span class="literal">True</span>)</span><br><span class="line">    company_name = models.CharField(max_length=<span class="number">100</span>)</span><br><span class="line">    unified_social_credit_code = models.CharField(max_length=<span class="number">18</span>)</span><br><span class="line">    legal_person_name = models.CharField(max_length=<span class="number">50</span>)</span><br><span class="line">    legal_person_mobile = models.CharField(max_length=<span class="number">20</span>)</span><br><span class="line">    legal_person_certification_type = models.IntegerField()</span><br><span class="line">    legal_person_certification_number = models.CharField(max_length=<span class="number">255</span>)</span><br><span class="line">    corresponding_person_name = models.CharField(max_length=<span class="number">50</span>)</span><br><span class="line">    corresponding_person_mobile = models.CharField(max_length=<span class="number">20</span>)</span><br><span class="line">    legal_person_idcard_front_url = models.CharField(max_length=<span class="number">255</span>)</span><br><span class="line">    legal_person_idcard_back_url = models.CharField(max_length=<span class="number">255</span>)</span><br><span class="line">    business_license_url = models.CharField(max_length=<span class="number">255</span>)</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">&#x27;legal_person_table&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NaturalPersonTable</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    User = models.OneToOneField(<span class="string">&#x27;core.User&#x27;</span>, models.CASCADE, primary_key=<span class="literal">True</span>)</span><br><span class="line">    real_name = models.CharField(max_length=<span class="number">100</span>)</span><br><span class="line">    idcard_number = models.CharField(max_length=<span class="number">18</span>)</span><br><span class="line">    idcard_front_url = models.CharField(max_length=<span class="number">255</span>)</span><br><span class="line">    idcard_back_url = models.CharField(max_length=<span class="number">255</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">&#x27;natural_person_table&#x27;</span></span><br></pre></td></tr></table></figure><p>在这里需要注意的是，如果发现运行正常，但是数据库没有改动的话：</p><blockquote><p><strong>Meta 的 managed属性</strong></p><p>由于Django会自动根据模型类生成映射的数据库表，如果你不希望Django这么做，可以把managed的值设置为False。</p><p>默认值为True,这个选项为True时Django可以对数据库表进行 migrate或migrations、删除等操作。在这个时间Django将管理数据库中表的生命周期</p><p>如果为False的时候，不会对数据库表进行创建、删除等操作。可以用于现有表、数据库视图等，其他操作是一样的。</p></blockquote><ol><li><p>在<code>setting.py</code>中增加<code>AUTH_USER_MODEL = &#39;core.User&#39;</code></p></li><li><p>需要在<code>admin.py</code>中进行注册：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">admin.site.register(User, UserAdmin)</span><br><span class="line">admin.site.register(NaturalPersonTable)</span><br><span class="line">admin.site.register(LegalPersonTable)</span><br></pre></td></tr></table></figure></li><li><p>一步一步执行：</p><ol><li><p><code>python manage.py makemigrations core</code>显示正常</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Migrations <span class="keyword">for</span> <span class="string">&#x27;core&#x27;</span>:</span><br><span class="line">  core/migrations/0001_initial.py</span><br><span class="line">    - Create model User</span><br><span class="line">    - Create model LegalPersonTable</span><br><span class="line">    - Create model NaturalPersonTable</span><br><span class="line">(Spider) </span><br></pre></td></tr></table></figure></li><li><p><code>python manage.py sqlmigrate core 0001</code>同样显示正常</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">--</span><br><span class="line">-- Create model User</span><br><span class="line">--</span><br><span class="line">CREATE TABLE &#96;core_user&#96; (&#96;id&#96; integer AUTO_INCREMENT NOT NULL PRIMARY KEY, &#96;password&#96; varchar(128) NOT NULL, &#96;last_login&#96; datetime(6) NULL, &#96;is_superuser&#96; bool NOT NULL, &#96;username&#96; varchar(150) NOT NULL UNIQUE, &#96;first_name&#96; varchar(150) NOT NULL, &#96;last_name&#96; varchar(150) NOT NULL, &#96;email&#96; varchar(254) NOT NULL, &#96;is_staff&#96; bool NOT NULL, &#96;is_active&#96; bool NOT NULL, &#96;date_joined&#96; datetime(6) NOT NULL, &#96;user_type&#96; integer NOT NULL, &#96;user_mobile&#96; varchar(20) NOT NULL);</span><br><span class="line">CREATE TABLE &#96;core_user_groups&#96; (&#96;id&#96; integer AUTO_INCREMENT NOT NULL PRIMARY KEY, &#96;user_id&#96; integer NOT NULL, &#96;group_id&#96; integer NOT NULL);</span><br><span class="line">CREATE TABLE &#96;core_user_user_permissions&#96; (&#96;id&#96; integer AUTO_INCREMENT NOT NULL PRIMARY KEY, &#96;user_id&#96; integer NOT NULL, &#96;permission_id&#96; integer NOT NULL);</span><br><span class="line">--</span><br><span class="line">-- Create model LegalPersonTable</span><br><span class="line">--</span><br><span class="line">CREATE TABLE &#96;legal_person_table&#96; (&#96;User_id&#96; integer NOT NULL PRIMARY KEY, &#96;company_name&#96; varchar(100) NOT NULL, &#96;unified_social_credit_code&#96; varchar(18) NOT NULL, &#96;legal_person_name&#96; varchar(50) NOT NULL, &#96;legal_person_mobile&#96; varchar(20) NOT NULL, &#96;legal_person_certification_type&#96; integer NOT NULL, &#96;legal_person_certification_number&#96; varchar(255) NOT NULL, &#96;corresponding_person_name&#96; varchar(50) NOT NULL, &#96;corresponding_person_mobile&#96; varchar(20) NOT NULL, &#96;legal_person_idcard_front_url&#96; varchar(255) NOT NULL, &#96;legal_person_idcard_back_url&#96; varchar(255) NOT NULL, &#96;business_license_url&#96; varchar(255) NOT NULL);</span><br><span class="line">--</span><br><span class="line">-- Create model NaturalPersonTable</span><br><span class="line">--</span><br><span class="line">CREATE TABLE &#96;natural_person_table&#96; (&#96;User_id&#96; integer NOT NULL PRIMARY KEY, &#96;real_name&#96; varchar(100) NOT NULL, &#96;idcard_number&#96; varchar(18) NOT NULL, &#96;idcard_front_url&#96; varchar(255) NOT NULL, &#96;idcard_back_url&#96; varchar(255) NOT NULL);</span><br><span class="line">ALTER TABLE &#96;core_user_groups&#96; ADD CONSTRAINT &#96;core_user_groups_user_id_group_id_c82fcad1_uniq&#96; UNIQUE (&#96;user_id&#96;, &#96;group_id&#96;);</span><br><span class="line">ALTER TABLE &#96;core_user_groups&#96; ADD CONSTRAINT &#96;core_user_groups_user_id_70b4d9b8_fk_core_user_id&#96; FOREIGN KEY (&#96;user_id&#96;) REFERENCES &#96;core_user&#96; (&#96;id&#96;);</span><br><span class="line">ALTER TABLE &#96;core_user_groups&#96; ADD CONSTRAINT &#96;core_user_groups_group_id_fe8c697f_fk_auth_group_id&#96; FOREIGN KEY (&#96;group_id&#96;) REFERENCES &#96;auth_group&#96; (&#96;id&#96;);</span><br><span class="line">ALTER TABLE &#96;core_user_user_permissions&#96; ADD CONSTRAINT &#96;core_user_user_permissions_user_id_permission_id_73ea0daa_uniq&#96; UNIQUE (&#96;user_id&#96;, &#96;permission_id&#96;);</span><br><span class="line">ALTER TABLE &#96;core_user_user_permissions&#96; ADD CONSTRAINT &#96;core_user_user_permissions_user_id_085123d3_fk_core_user_id&#96; FOREIGN KEY (&#96;user_id&#96;) REFERENCES &#96;core_user&#96; (&#96;id&#96;);</span><br><span class="line">ALTER TABLE &#96;core_user_user_permissions&#96; ADD CONSTRAINT &#96;core_user_user_permi_permission_id_35ccf601_fk_auth_perm&#96; FOREIGN KEY (&#96;permission_id&#96;) REFERENCES &#96;auth_permission&#96; (&#96;id&#96;);</span><br><span class="line">ALTER TABLE &#96;legal_person_table&#96; ADD CONSTRAINT &#96;legal_person_table_User_id_9bc58715_fk_core_user_id&#96; FOREIGN KEY (&#96;User_id&#96;) REFERENCES &#96;core_user&#96; (&#96;id&#96;);</span><br><span class="line">ALTER TABLE &#96;natural_person_table&#96; ADD CONSTRAINT &#96;natural_person_table_User_id_72171d3a_fk_core_user_id&#96; FOREIGN KEY (&#96;User_id&#96;) REFERENCES &#96;core_user&#96; (&#96;id&#96;);</span><br><span class="line">(Spider) </span><br></pre></td></tr></table></figure></li><li><p><code>python manage.py migrate </code>即可</p></li></ol></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近接了一个项目，打算用&lt;code&gt;Django+Vue&lt;/code&gt;的方式去搭建一个网站.&lt;/p&gt;
&lt;p&gt;由于网站的使用用户分为两类，因此决定使用&lt;code&gt;OneToOneField&lt;/code&gt;的方法去自定义用户类.&lt;/p&gt;
&lt;p&gt;具体代码如下:&lt;/p&gt;
&lt;figur</summary>
      
    
    
    
    <category term="后台" scheme="http://yunzhe.info/categories/%E5%90%8E%E5%8F%B0/"/>
    
    
    <category term="Django" scheme="http://yunzhe.info/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yunzhe.info/2020/hello-world/"/>
    <id>http://yunzhe.info/2020/hello-world/</id>
    <published>2020-10-08T13:30:57.836Z</published>
    <updated>2020-10-09T13:37:23.106Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvLw==">Hexo<i class="fa fa-external-link-alt"></i></span>! This is your very first post. Check <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv">documentation<i class="fa fa-external-link-alt"></i></span> for more info. If you get any problems when using Hexo, you can find the answer in <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=">troubleshooting<i class="fa fa-external-link-alt"></i></span> or you can ask me on <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==">GitHub<i class="fa fa-external-link-alt"></i></span>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s">Writing<i class="fa fa-external-link-alt"></i></span></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=">Server<i class="fa fa-external-link-alt"></i></span></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s">Generating<i class="fa fa-external-link-alt"></i></span></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s">Deployment<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9oZXhvLmlvLw==&quot;&gt;Hexo&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;! This is your very</summary>
      
    
    
    
    
  </entry>
  
</feed>
